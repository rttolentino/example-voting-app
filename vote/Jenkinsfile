pipeline {
  agent none

  stages {
    stage("build") {
      when {
        changeset "**/vote/**"
      }
      agent {
        docker {
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }
      steps {
        echo 'Compiling vote app...'
        dir('vote') {
          sh 'pip install -r requirements.txt'
        }
      }
    }
    stage("test") {
      when {
        changeset "**/vote/**"
      }
      agent {
        docker {
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }
      steps {
        echo 'Running Unit Tests on vote app'
        dir('vote') {
          sh 'pip install -r requirements.txt'
          sh 'nosetests -v'
        }
      }
    }
    stage('vote-integration') {
      when {
        changeset "**/vote/**"
        branch 'master'
      }
      agent any
      steps {
        echo 'Running Integration Test on vote app'
        sh 'sh integration_test.sh'
      }
    }
    stage("vote-docker-package") {
      when {
        changeset '**/vote/**'
        branch 'master'
      }
      agent any
      steps {
        echo 'Packing vote app with Docker'
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
            def voteImage = docker.build("rttolentino/vote:v${env.BUILD_ID}", './vote')
            voteImage.push()
            voteImage.push("${env.BRANCH_NAME}")
            voteImage.push('latest')
          }
        }
      }
    }
  }

  post {
    always {
      echo 'Building multibranch pipeline for vote has completed...'
    }
  }
}
