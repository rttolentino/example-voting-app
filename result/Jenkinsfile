pipeline {
  agent none

  stages {
    stage("build") {
      when {
        changeset "**/result/**"
      }
      agent {
        docker {
          image 'node:8.16.0-alpine'
        }
      }
      steps {
        echo 'Compiling result app...'
        dir('result') {
          sh 'npm install'
        }
      }
    }
    stage("test") {
      when {
        changeset "**/result/**"
      }
      agent {
        docker {
          image 'node:8.16.0-alpine'
        }
      }
      steps {
        echo 'Running Unit Tests on result app'
        dir('result') {
          sh 'npm install'
          sh 'npm test'
        }
      }
    }
    stage("result-docker-package") {
      when {
        changeset '**/result/**'
        branch 'master'
      }
      agent any
      steps {
        echo 'Packing result app with Docker'
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
            def resultImage = docker.build("rttolentino/result:v${env.BUILD_ID}", './result')
            resultImage.push()
            resultImage.push("${env.BRANCH_NAME}")
            resultImage.push('latest')
          }
        }
      }
    }
  }

  post {
    always {
      echo 'Building multibranch pipeline for result has completed...'
    }
  }
}
